/* This file is automatically generated. Do NOT modify it directly! */

#ifndef MODELS_ITEM_BID_H_
#define MODELS_ITEM_BID_H_

#include "auctionmark_constants.h"
#include "utils/nullable.h"
#include <string>
#include <cstdint>
#include <ctime>

namespace auctionmark {

class ItemBid {
public:
  static ItemBid FromJson(const std::string &json);
  static std::string name() {
    return kTableNameItemBid;
  }

  ItemBid() = default;
  ItemBid(Nullable<uint64_t> ib_id_,
          Nullable<uint64_t> ib_i_id_,
          Nullable<uint64_t> ib_u_id_,
          Nullable<uint64_t> ib_buyer_id_,
          Nullable<double>   ib_bid_,
          Nullable<double>   ib_max_bid_,
          std::time_t        ib_created_,
          std::time_t        ib_updated_);
  std::string ToJson();
  

  Nullable<uint64_t>    ib_id;
  Nullable<uint64_t>    ib_i_id;
  Nullable<uint64_t>    ib_u_id;
  Nullable<uint64_t>    ib_buyer_id;
  Nullable<double>      ib_bid;
  Nullable<double>      ib_max_bid;
  std::time_t           ib_created;
  std::time_t           ib_updated;
};

} // namespace auctionmark

#endif // MODELS_ITEM_BID_H_
